# The config expects the following environment variables to be set:
#  - "GN_CONFIG" Build type. One of {'testing', 'release'}.
#  - "GN_EXTRA_ARGS" Additional gn arguments for a build config,
#      e.g. 'target_cpu="x86"' to build for a 32bit platform.
#      https://gn.googlesource.com/gn/+/master/docs/reference.md#target_cpu
#      Don't forget to set up "NPM_CONFIG_ARCH" and "TARGET_ARCH" accordningly
#      if you pass a custom value for 'target_cpu'.
#  - "ELECTRON_RELEASE" Set it to '1' upload binaries on success.
#  - "NPM_CONFIG_ARCH" E.g. 'x86'. Is used to build native Node.js modules.
#      Must match 'target_cpu' passed to "GN_EXTRA_ARGS" and "TARGET_ARCH" value.
#  - "TARGET_ARCH" Choose from {'ia32', 'x64', 'arm', 'arm64', 'mips64el'}.
#      Is used in some publishing scripts, but does NOT affect the Electron binary.
#      Must match 'target_cpu' passed to "GN_EXTRA_ARGS" and "NPM_CONFIG_ARCH" value.
#  - "UPLOAD_TO_S3" Set it to '1' upload a release to the S3 bucket.
#      Otherwise the release will be uploaded to the Github Releases.
#      (The value is only checked if "ELECTRON_RELEASE" is defined.)
#
# The publishing scripts expect access tokens to be defined as env vars,
# but those are not covered here.
#
# AppVeyor docs on variables:
# https://www.appveyor.com/docs/environment-variables/
# https://www.appveyor.com/docs/build-configuration/#secure-variables
# https://www.appveyor.com/docs/build-configuration/#custom-environment-variables

# Uncomment these lines to enable RDP
#on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

version: 1.0.{build}
build_cloud: electron-16-core2
image: base-electron
  GIT_CACHE_PATH: C:\Users\appveyor\libcc_cache
  ELECTRON_OUT_DIR: Default
  ELECTRON_ENABLE_STACK_DUMPING: 1
  MOCHA_REPORTER: mocha-multi-reporters
  MOCHA_MULTI_REPORTERS: mocha-appveyor-reporter, tap
  GOMA_FALLBACK_ON_AUTH_FAILURE: true
  DEPOT_TOOLS_WIN_TOOLCHAIN: 0
notifications:
  - provider: Webhook
    url: https://electron-mission-control.herokuapp.com/rest/appveyor-hook
    method: POST
    headers:
      x-mission-control-secret:
        secure: 90BLVPcqhJPG7d24v0q/RRray6W3wDQ8uVQlQjOHaBWkw1i8FoA1lsjr2C/v1dVok+tS2Pi6KxDctPUkwIb4T27u4RhvmcPzQhVpfwVJAG9oNtq+yKN7vzHfg7k/pojEzVdJpQLzeJGcSrZu7VY39Q==
    on_build_success: false
    on_build_failure: true
    on_build_status_changed: false
build_script:
  - ps: >-
      if(($env:APPVEYOR_PULL_REQUEST_HEAD_REPO_NAME -split "/")[0] -eq ($env:APPVEYOR_REPO_NAME -split "/")[0]) {
        Write-warning "Skipping PR build for branch"; Exit-AppveyorBuild
      } else {
        node script/yarn.js install --frozen-lockfile
        $result = node script/doc-only-change.js --prNumber=$env:APPVEYOR_PULL_REQUEST_NUMBER --prBranch=$env:APPVEYOR_REPO_BRANCH
        if ($result.ExitCode -eq 0) {
          Write-warning "Skipping build for doc only change"; Exit-AppveyorBuild
        }
        $global:LASTEXITCODE = 0
      }
  - echo "Building $env:GN_CONFIG build"
  - git config --global core.longpaths true
  - cd ..
  - ps: git clone --depth=1 https://chromium.googlesource.com/chromium/tools/depot_tools.git  
  - ps: $env:PATH="$pwd\depot_tools;$env:PATH"  
  - ps: Move-Item $env:APPVEYOR_BUILD_FOLDER -Destination src\electron
  - ps: $env:CHROMIUM_BUILDTOOLS_PATH="$pwd\src\buildtools"
  - ps: >-
      if ($env:GN_CONFIG -ne 'release') {
        $env:NINJA_STATUS="[%r processes, %f/%t @ %o/s : %es] "
      }
  - >-
      gclient config
      --name "src\electron"
      --unmanaged
      %GCLIENT_EXTRA_ARGS%
      "https://github.com/electron/electron"
  - gclient sync
after_build:
- ps: |
    if ($env:TARGET_ARCH -eq 'x64') {
      $env:APPVEYOR_BAKE_IMAGE = 'electron-test-bake-image'
    }

on_image_bake:
- ps: echo "Baking image: $env:APPVEYOR_BAKE_IMAGE"